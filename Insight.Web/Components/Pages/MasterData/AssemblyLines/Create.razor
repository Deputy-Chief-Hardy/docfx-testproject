@page "/MasterData/AssemblyLines/Create"
@using KnorrBremse.Insight.MasterData.ApiClient
@using KnorrBremse.Insight.MasterData.API.Model;

@inject MasterDataClient MasterDataClient
@inject NavigationManager Navigation

<PageTitle>Create Assembly Line</PageTitle>

<!-- <a href="https://www.freepik.com/icon/industry_5277441">Icon by Freepik</a> -->
<h1><img src="/media/assembly_line_color.png" /> Create Assembly Line</h1>

@message

<EditForm Model="Model" OnValidSubmit="SaveClick" FormName="AssemblyLineEdit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Name</label>
        <div class="col-auto">
            <InputText class="form-control" @bind-Value="Model.SapName" />
            <ValidationMessage For="(() => Model.SapName)" />
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label">Description</label>
        <InputText class="form-control col-auto" @bind-Value="Model.Description" />
        <div class="col-auto">
            <ValidationMessage For="(() => Model.Description)" />
        </div>
    </div>

    <div class="mb-3 form-check form-switch">
        <InputCheckbox class="form-check-input" @bind-Value="Model.IsActive" id="isActive"/>
        <label class="form-label" for="isActive">Is Active</label>
    </div>

    <div class="">
        <button type="submit" class="btn btn-primary">
            Save
        </button>
        <a class="btn btn-secondary" href="MasterData/AssemblyLines">Cancel</a>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    protected AssemblyLine Model { get; set; } = new();

    private string message = string.Empty;

    protected async Task SaveClick()
    {
        try
        {
            await MasterDataClient.AssemblyLinesPOSTAsync(Model);
            //message = "Data has been created.";
            Navigation.NavigateTo("MasterData/AssemblyLines", true); // Don't worry if your debugger shows a NavigationException here. That is how redirects are implemented in Blazor.
        }
        catch (ApiException ex)
        {
            message = "An error occured during update. " + ex.Message;
        }
    }

}


